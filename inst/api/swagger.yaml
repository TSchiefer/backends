swagger: "2.0"
info:
  description: "Lists all known DBI backends"
  version: "0.0.1"
  title: "DBI backends"
paths:
  /all:
    get:
      summary: ' All backends'
      responses:
        '200':
          description: OK
        default:
          description: Default response.
      parameters: []
  /by-package:
    get:
      summary: ' Request backend by R package name'
      produces:
      - "application/json"
      responses:
        '200':
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/backend"
        '400':
          description: Package name missing (required).
        '404':
          description: Package name not found.
      default:
        description: Default response.
      security:
      - api_key: []
      parameters:
      - name: name
        description: Package name
        in: query
        required: yes
        type: "array"
        items:
          type: "string"
          enum:
          - "RMySQL"
          - "RPostgres"
          - "noctua"
          - "RAthena"
          - "odbc"
          - "RSQLite"
          - "RMariaDB"
          - "AzureKusto"
          - "RPresto"
          - "civis"
          - "RecordLinkage"
          - "implyr"
          - "DatabaseConnector"
          - "bigrquery"
          - "MonetDBLite"
          - "RJDBC"
          - "RClickhouse"
          - "sergeant"
          - "RSQLServer"
          - "ROracle"
          - "TSmisc"
          - "TSsdmx"
          - "MonetDB.R"
          - "TSfame"
          - "TSjson"
          - "TSgetSymbol"
          - "TShistQuote"
          - "TSxls"
          - "TSzip"
          - "TSpadi"
          default: "RPostgres"
        collectionFormat: "multi"
  /give-feedback:
    post:
      summary: ' Post something'
      responses:
        '200':
          description: OK
        '400':
          description: empty post or bad content type
        default:
          description: Default response.
      parameters:
      - name: content
        description: Content of the post
        in: query
        required: yes
        type: "string"
  /file-upload:
    post:
      summary: ' Upload a file'
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: upload
          type: file
          description: The file to upload.
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/file_info"
        '400':
          description: empty post or bad content type
        default:
          description: Default response.
definitions:
  file_info:
    description: "Meta-info about uploaded file"
    type: "object"
    properties:
      length:
        type: "integer"
        example: "100"
      md5:
        type: "character"
        example: "6717f2823d3202449301145073ab8719"
  backend:
    description: "Name of package"
    type: "object"
    properties:
      version:
        type: "string"
        example: "1.0.3"
      title:
        type: "string"
        example: "'Rcpp' Interface to 'PostgreSQL'"
      description:
        type: "string"
        example: "Fully 'DBI'-compliant 'Rcpp'-backed interface to 'PostgreSQL' <https://www.postgresql.org/>, an open-source relational database."
      date:
        type: "string"
        example: "2019-12-07"
      maintainer:
        type: "string"
        example: "Kirill MÃ¼ller <krlmlr+r@mailbox.org>"
      license:
        type: "string"
        example: "GPL-2"
      url:
        type: "string"
        example: "https://github.com/r-dbi/RPostgres"
      bugs:
        type: "string"
        example: "https://github.com/r-dbi/RPostgres/issues"
